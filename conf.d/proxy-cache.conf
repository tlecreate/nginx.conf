# ---------------------------------------------------------------------
# REVERSE PROXY CONFIGURATION
# ---------------------------------------------------------------------

#Enables or disables buffering of responses from the proxied server.
proxy_buffering on;

#prevent header too large errors
proxy_buffers 256 16k;
proxy_buffer_size 32k;

#set the location of the cached files, zone, name, size (1000 MB) and how long to cache for (600 minutes)
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=edge-cache:10m inactive=600m max_size=1g;
proxy_cache_key $scheme$host$request_uri;
proxy_cache_methods GET HEAD;

# When enabled, only one request at a time will be allowed to populate
# a new cache element identified according to the proxy_cache_key directive
# by passing a request to a proxied server.
# Other requests of the same cache element will either wait for a response to appear in the cache
# or the cache lock for this element to be released, up to the time set by the proxy_cache_lock_timeout directive.
proxy_cache_lock on;

# proxy_cache_revalidate instructs NGINX to use conditional GET requests when refreshing content from the origin servers.
# If a client requests an item that is cached but expired as defined by the cache control headers, NGINX includes the
# If-Modified-Since field in the header of the GET request it sends to the origin server.
# This saves on bandwidth, because the server sends the full item only if it has been modified since the time recorded
# in the Last-Modified header attached to the file when NGINX originally cached it.
proxy_cache_revalidate on;

#proxy_cache_min_uses sets the number of times an item must be requested by clients before NGINX caches it.
# This is useful if the cache is constantly filling up, as it ensures that only the most frequently accessed items
# are added to the cache. By default proxy_cache_min_uses is set to 1.
proxy_cache_min_uses 3;

#The updating parameter to the proxy_cache_use_stale directive, combined with enabling the
# proxy_cache_background_update directive, instructs NGINX to deliver stale content when clients request an item
# that is expired or is in the process of being updated from the origin server. All updates will be done in the background.
# The stale file is returned for all requests until the updated file is fully downloaded.
proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
proxy_cache_background_update on;

#fix 504 gateway timeouts, can go in nginx.conf
proxy_connect_timeout 600;
proxy_send_timeout 600;
proxy_read_timeout 600;
send_timeout 600;

# Sets caching time for different response codes
# proxy_cache_valid 200 302   1s;
# proxy_cache_valid 301        1h;
# proxy_cache_valid any        15s;

# Sets the HTTP protocol version for proxying (default is 1.0).
# Version 1.1 is recommended for use with keepalive connections and NTLM authentication.
proxy_http_version       1.1;

# Determines whether SSL sessions can be reused when working with the proxied server (default is on).
# If the errors “SSL3_GET_FINISHED:digest check failed” appear in the logs, try turning it off.
# proxy_ssl_session_reuse   on;

# ---------------------------------------------------------------------
# REVERSE PROXY CONFIGURATION - END
# ---------------------------------------------------------------------
